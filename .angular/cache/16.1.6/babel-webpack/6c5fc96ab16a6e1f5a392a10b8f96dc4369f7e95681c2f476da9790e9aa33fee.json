{"ast":null,"code":"import { Piece, PieceColor } from \"../../piece\";\nexport class Bishop extends Piece {\n  possibleMoves(colorBoard) {\n    var boardWidth = colorBoard[0].length;\n    var boardHeight = colorBoard.length;\n    var possibleMoves = [];\n    var diagonals = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n    for (let i = 0; i < diagonals.length; i++) {\n      var changeY = diagonals[i][0];\n      var changeX = diagonals[i][1];\n      var tempY = this.fieldHeight + changeY;\n      var tempX = this.fieldWidth + changeX;\n      while (this.correctField(boardHeight, boardWidth, tempY, tempX)) {\n        var color = colorBoard[tempY][tempX];\n        if (color == this.color) {\n          break;\n        } else if (color == PieceColor.None) {\n          possibleMoves.push([tempY, tempX]);\n          tempY += changeY;\n          tempX += changeX;\n        } else {\n          possibleMoves.push([tempY, tempX]);\n          tempY += changeY;\n          tempX += changeX;\n          break;\n        }\n      }\n    }\n    return possibleMoves;\n  }\n  constructor(fieldHeight, fieldWidth) {\n    super(fieldHeight, fieldWidth);\n  }\n}","map":{"version":3,"names":["Piece","PieceColor","Bishop","possibleMoves","colorBoard","boardWidth","length","boardHeight","diagonals","i","changeY","changeX","tempY","fieldHeight","tempX","fieldWidth","correctField","color","None","push","constructor"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\src\\app\\chess\\pieces\\piece\\bishop\\bishop.ts"],"sourcesContent":["import { Piece, PieceColor } from \"../../piece\";\n\nexport abstract class Bishop extends Piece {\n    \n    possibleMoves(colorBoard: PieceColor[][]): number[][] {\n\n        var boardWidth = colorBoard[0].length;\n        var boardHeight = colorBoard.length;\n        var possibleMoves = [];\n        var diagonals = [\n            [-1, -1],\n            [-1, 1],\n            [1, -1],\n            [1, 1]\n        ]\n        for (let i = 0; i < diagonals.length; i++) {\n            var changeY = diagonals[i][0];\n            var changeX = diagonals[i][1];\n\n            var tempY = this.fieldHeight + changeY;\n            var tempX = this.fieldWidth + changeX;\n\n            while (this.correctField(boardHeight, boardWidth, tempY, tempX)) {\n                var color = colorBoard[tempY][tempX];\n                if (color == this.color) { break }\n                else if (color == PieceColor.None) {\n                    possibleMoves.push([tempY, tempX]);\n                    tempY += changeY;\n                    tempX += changeX;\n                }\n                else {\n                    possibleMoves.push([tempY, tempX]);\n                    tempY += changeY;\n                    tempX += changeX;\n                    break;\n                }\n            }\n        }\n        return possibleMoves;\n    \n    }\n\n    constructor(fieldHeight: number, fieldWidth: number) {\n        super(fieldHeight, fieldWidth);\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,UAAU,QAAQ,aAAa;AAE/C,OAAM,MAAgBC,MAAO,SAAQF,KAAK;EAEtCG,aAAaA,CAACC,UAA0B;IAEpC,IAAIC,UAAU,GAAGD,UAAU,CAAC,CAAC,CAAC,CAACE,MAAM;IACrC,IAAIC,WAAW,GAAGH,UAAU,CAACE,MAAM;IACnC,IAAIH,aAAa,GAAG,EAAE;IACtB,IAAIK,SAAS,GAAG,CACZ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CACT;IACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACF,MAAM,EAAEG,CAAC,EAAE,EAAE;MACvC,IAAIC,OAAO,GAAGF,SAAS,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAIE,OAAO,GAAGH,SAAS,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC;MAE7B,IAAIG,KAAK,GAAG,IAAI,CAACC,WAAW,GAAGH,OAAO;MACtC,IAAII,KAAK,GAAG,IAAI,CAACC,UAAU,GAAGJ,OAAO;MAErC,OAAO,IAAI,CAACK,YAAY,CAACT,WAAW,EAAEF,UAAU,EAAEO,KAAK,EAAEE,KAAK,CAAC,EAAE;QAC7D,IAAIG,KAAK,GAAGb,UAAU,CAACQ,KAAK,CAAC,CAACE,KAAK,CAAC;QACpC,IAAIG,KAAK,IAAI,IAAI,CAACA,KAAK,EAAE;UAAE;SAAO,MAC7B,IAAIA,KAAK,IAAIhB,UAAU,CAACiB,IAAI,EAAE;UAC/Bf,aAAa,CAACgB,IAAI,CAAC,CAACP,KAAK,EAAEE,KAAK,CAAC,CAAC;UAClCF,KAAK,IAAIF,OAAO;UAChBI,KAAK,IAAIH,OAAO;SACnB,MACI;UACDR,aAAa,CAACgB,IAAI,CAAC,CAACP,KAAK,EAAEE,KAAK,CAAC,CAAC;UAClCF,KAAK,IAAIF,OAAO;UAChBI,KAAK,IAAIH,OAAO;UAChB;;;;IAIZ,OAAOR,aAAa;EAExB;EAEAiB,YAAYP,WAAmB,EAAEE,UAAkB;IAC/C,KAAK,CAACF,WAAW,EAAEE,UAAU,CAAC;EAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}