{"ast":null,"code":"import { Piece } from \"../../piece\";\nexport class Knight extends Piece {\n  possibleMoves(colorBoard) {\n    var possibleMoves = [];\n    var boardHeight = colorBoard.length;\n    console.log(\"colorBoard: \", colorBoard);\n    var boardWidth = colorBoard[0].length;\n    var moves = [[-2, 1], [-1, 2], [1, 2], [2, 1], [2, -1], [1, -2], [-1, -2], [-2, -1]];\n    for (let i = 0; i < moves.length; i++) {\n      var y = moves[i][0] + this.fieldHeight;\n      var x = moves[i][1] + this.fieldWidth;\n      if (this.correctField(boardHeight, boardWidth, y, x)) {\n        if (this.color != colorBoard[y][x]) {\n          possibleMoves.push([y, x]);\n        }\n      }\n    }\n    return possibleMoves;\n  }\n  constructor(fieldHeight, fieldWidth) {\n    super(fieldHeight, fieldWidth);\n  }\n}","map":{"version":3,"names":["Piece","Knight","possibleMoves","colorBoard","boardHeight","length","console","log","boardWidth","moves","i","y","fieldHeight","x","fieldWidth","correctField","color","push","constructor"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\src\\app\\chess\\pieces\\piece\\knight\\knight.ts"],"sourcesContent":["import { Piece, PieceColor } from \"../../piece\";\n\nexport abstract class Knight extends Piece {\n\n    possibleMoves(colorBoard: PieceColor[][]) : number[][] {\n        var possibleMoves = [];\n        var boardHeight = colorBoard.length;\n        console.log(\"colorBoard: \", colorBoard);\n        var boardWidth = colorBoard[0].length;\n        var moves = [\n            [-2, 1],\n            [-1, 2],\n            [1, 2],\n            [2, 1],\n            [2, -1],\n            [1, -2],\n            [-1, -2],\n            [-2, -1]\n        ]\n        for ( let i = 0; i < moves.length; i++) {\n            var y = moves[i][0] + this.fieldHeight;\n            var x = moves[i][1] + this.fieldWidth;\n            if (this.correctField(boardHeight, boardWidth, y, x)) {\n                if (this.color != colorBoard[y][x]) {\n                    possibleMoves.push([y, x])\n                }\n            }\n        }\n        return possibleMoves;\n    }\n\n    constructor(fieldHeight: number, fieldWidth: number) {\n        super(fieldHeight, fieldWidth);\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAoB,aAAa;AAE/C,OAAM,MAAgBC,MAAO,SAAQD,KAAK;EAEtCE,aAAaA,CAACC,UAA0B;IACpC,IAAID,aAAa,GAAG,EAAE;IACtB,IAAIE,WAAW,GAAGD,UAAU,CAACE,MAAM;IACnCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;IACvC,IAAIK,UAAU,GAAGL,UAAU,CAAC,CAAC,CAAC,CAACE,MAAM;IACrC,IAAII,KAAK,GAAG,CACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACX;IACD,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACJ,MAAM,EAAEK,CAAC,EAAE,EAAE;MACpC,IAAIC,CAAC,GAAGF,KAAK,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACE,WAAW;MACtC,IAAIC,CAAC,GAAGJ,KAAK,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAACI,UAAU;MACrC,IAAI,IAAI,CAACC,YAAY,CAACX,WAAW,EAAEI,UAAU,EAAEG,CAAC,EAAEE,CAAC,CAAC,EAAE;QAClD,IAAI,IAAI,CAACG,KAAK,IAAIb,UAAU,CAACQ,CAAC,CAAC,CAACE,CAAC,CAAC,EAAE;UAChCX,aAAa,CAACe,IAAI,CAAC,CAACN,CAAC,EAAEE,CAAC,CAAC,CAAC;;;;IAItC,OAAOX,aAAa;EACxB;EAEAgB,YAAYN,WAAmB,EAAEE,UAAkB;IAC/C,KAAK,CAACF,WAAW,EAAEE,UAAU,CAAC;EAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}