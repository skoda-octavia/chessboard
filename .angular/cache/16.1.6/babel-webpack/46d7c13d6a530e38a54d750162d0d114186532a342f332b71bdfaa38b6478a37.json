{"ast":null,"code":"import { InfiniteRangePiece } from \"../infinite-range-piece\";\nexport class Bishop extends InfiniteRangePiece {\n  constructor() {\n    super(...arguments);\n    this.directions = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n  }\n  possibleMoves(colorBoard) {\n    return this.possibleInfiniteRangeMoves(colorBoard);\n  }\n}","map":{"version":3,"names":["InfiniteRangePiece","Bishop","constructor","directions","possibleMoves","colorBoard","possibleInfiniteRangeMoves"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\chess\\pieces\\piece\\infiniteRangePiece\\bishop\\bishop.ts"],"sourcesContent":["import { Field } from \"src/app/chess/field/field\";\nimport { Piece, PieceColor } from \"../../../piece\";\nimport { InfiniteRangePiece } from \"../infinite-range-piece\";\n\nexport abstract class Bishop extends InfiniteRangePiece {\n\n    directions: number[][] = [\n            [-1, -1],\n            [-1, 1],\n            [1, -1],\n            [1, 1]\n        ] \n    \n    possibleMoves(colorBoard: PieceColor[][]): number[][] {\n\n        return this.possibleInfiniteRangeMoves(colorBoard);\n\n    }\n\n}\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAM,MAAgBC,MAAO,SAAQD,kBAAkB;EAAvDE,YAAA;;IAEI,KAAAC,UAAU,GAAe,CACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CACT;EAQT;EANIC,aAAaA,CAACC,UAA0B;IAEpC,OAAO,IAAI,CAACC,0BAA0B,CAACD,UAAU,CAAC;EAEtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}