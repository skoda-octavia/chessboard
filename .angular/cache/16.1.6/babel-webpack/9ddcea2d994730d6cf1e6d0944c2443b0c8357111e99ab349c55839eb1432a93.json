{"ast":null,"code":"import { InfiniteRangePiece } from \"../infinite-range-piece\";\nexport class Rook extends InfiniteRangePiece {\n  possibleMoves(colorBoard) {\n    return this.possibleInfiniteRangeMoves(colorBoard);\n  }\n  moveTo(height, width) {\n    this.fieldHeight = height;\n    this.fieldWidth = width;\n    if (!this.alreadyMoved) {\n      this.alreadyMoved = true;\n    }\n  }\n  constructor(fieldHeight, fieldWidth, field) {\n    super(fieldHeight, fieldWidth, field);\n    this.alreadyMoved = false;\n    this.directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n  }\n}","map":{"version":3,"names":["InfiniteRangePiece","Rook","possibleMoves","colorBoard","possibleInfiniteRangeMoves","moveTo","height","width","fieldHeight","fieldWidth","alreadyMoved","constructor","field","directions"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\chess\\pieces\\piece\\infiniteRangePiece\\rook\\rook.ts"],"sourcesContent":["import { withDebugTracing } from \"@angular/router\";\nimport { CastlingPiece } from \"../../../castlingPiece\";\nimport { Piece, PieceColor } from \"../../../piece\";\nimport { InfiniteRangePiece } from \"../infinite-range-piece\";\n\n\nexport abstract class Rook extends InfiniteRangePiece implements CastlingPiece {\n    \n    alreadyMoved: boolean = false;\n    directions: number[][] = [\n        [0, 1],\n        [0, -1],\n        [1, 0],\n        [-1, 0]\n    ];\n\n    possibleMoves(colorBoard: PieceColor[][]): number[][] {\n        return this.possibleInfiniteRangeMoves(colorBoard);\n    }\n\n    override moveTo(height: number, width: number): void {\n    this.fieldHeight = height;\n    this.fieldWidth = width;\n    \n    if (!this.alreadyMoved) {\n        this.alreadyMoved = true;\n    }\n}\n        \n    constructor(fieldHeight: number, fieldWidth: number, field: Field) {\n        super(fieldHeight, fieldWidth, field)\n    }\n}\n"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,yBAAyB;AAG5D,OAAM,MAAgBC,IAAK,SAAQD,kBAAkB;EAUjDE,aAAaA,CAACC,UAA0B;IACpC,OAAO,IAAI,CAACC,0BAA0B,CAACD,UAAU,CAAC;EACtD;EAESE,MAAMA,CAACC,MAAc,EAAEC,KAAa;IAC7C,IAAI,CAACC,WAAW,GAAGF,MAAM;IACzB,IAAI,CAACG,UAAU,GAAGF,KAAK;IAEvB,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;MACpB,IAAI,CAACA,YAAY,GAAG,IAAI;;EAEhC;EAEIC,YAAYH,WAAmB,EAAEC,UAAkB,EAAEG,KAAY;IAC7D,KAAK,CAACJ,WAAW,EAAEC,UAAU,EAAEG,KAAK,CAAC;IAtBzC,KAAAF,YAAY,GAAY,KAAK;IAC7B,KAAAG,UAAU,GAAe,CACrB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACV;EAiBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}