{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { Observable } from 'rxjs';\n// import { Student } from './Student';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class StudentService {\n//     private apiServerUrl = 'http://localhost:8080';\n//     constructor(private http: HttpClient) { }\n//     public getStudents(): Observable<Student[]> {\n//         return this.http.get<Student[]>(`${this.apiServerUrl}/api/v1/student`);\n//     }\n//     public addStudents(student: Student): Observable<Student> {\n//             return this.http.post<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n//             }\n//     public updateStudent(student: Student): Observable<Student> {\n//             return this.http.put<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n//     }\n//     public deleteStudent(studentId: number): Observable<void> {\n//         return this.http.delete<void>(`${this.apiServerUrl}/api/v1/student/${studentId}`);\n//         }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\student.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { Observable } from 'rxjs';\n// import { Student } from './Student';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class StudentService {\n//     private apiServerUrl = 'http://localhost:8080';\n\n//     constructor(private http: HttpClient) { }\n\n//     public getStudents(): Observable<Student[]> {\n//         return this.http.get<Student[]>(`${this.apiServerUrl}/api/v1/student`);\n//     }\n    \n//     public addStudents(student: Student): Observable<Student> {\n//             return this.http.post<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n//             }\n\n\n//     public updateStudent(student: Student): Observable<Student> {\n//             return this.http.put<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n//     }\n//     public deleteStudent(studentId: number): Observable<void> {\n//         return this.http.delete<void>(`${this.apiServerUrl}/api/v1/student/${studentId}`);\n//         }\n// }\n    \n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}