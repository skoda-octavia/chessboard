{"ast":null,"code":"import { InfiniteRangePiece } from \"../infinite-range-piece\";\nexport class Rook extends InfiniteRangePiece {\n  possibleMoves(colorBoard) {\n    return this.possibleInfiniteRangeMoves(colorBoard);\n  }\n  constructor(fieldHeight, fieldWidth) {\n    super(fieldHeight, fieldWidth);\n    this.directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n  }\n}","map":{"version":3,"names":["InfiniteRangePiece","Rook","possibleMoves","colorBoard","possibleInfiniteRangeMoves","constructor","fieldHeight","fieldWidth","directions"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\src\\app\\chess\\pieces\\piece\\infiniteRangePiece\\rook\\rook.ts"],"sourcesContent":["import { withDebugTracing } from \"@angular/router\";\nimport { Piece, PieceColor } from \"../../../piece\";\nimport { InfiniteRangePiece } from \"../infinite-range-piece\";\n\n\nexport abstract class Rook extends InfiniteRangePiece {\n    \n    directions: number[][] = [\n        [0, 1],\n        [0, -1],\n        [1, 0],\n        [-1, 0]\n    ];\n        possibleMoves(colorBoard: PieceColor[][]): number[][] {\n            return this.possibleInfiniteRangeMoves(colorBoard);\n        };\n        \n    constructor(fieldHeight: number, fieldWidth: number) {\n        super(fieldHeight, fieldWidth);\n    }\n}\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAG5D,OAAM,MAAgBC,IAAK,SAAQD,kBAAkB;EAQ7CE,aAAaA,CAACC,UAA0B;IACpC,OAAO,IAAI,CAACC,0BAA0B,CAACD,UAAU,CAAC;EACtD;EAEJE,YAAYC,WAAmB,EAAEC,UAAkB;IAC/C,KAAK,CAACD,WAAW,EAAEC,UAAU,CAAC;IAXlC,KAAAC,UAAU,GAAe,CACrB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACV;EAOD"},"metadata":{},"sourceType":"module","externalDependencies":[]}