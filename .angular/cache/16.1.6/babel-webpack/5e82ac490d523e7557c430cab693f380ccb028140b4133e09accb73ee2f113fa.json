{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:8080';\n  }\n  getStudents() {\n    return this.http.get(`${this.apiServerUrl}/api/v1/student`);\n  }\n  addStudents(student) {\n    return this.http.post(`${this.apiServerUrl}/api/v1/student`, student);\n  }\n  updateStudent(student) {\n    return this.http.put(`${this.apiServerUrl}/api/v1/student`, student);\n  }\n  deleteStudent(studentId) {\n    return this.http.delete(`${this.apiServerUrl}/api/v1/student/${studentId}`);\n  }\n}\nStudentService.ɵfac = function StudentService_Factory(t) {\n  return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentService,\n  factory: StudentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["StudentService","constructor","http","apiServerUrl","getStudents","get","addStudents","student","post","updateStudent","put","deleteStudent","studentId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Użytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Student } from './Student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n    private apiServerUrl = 'http://localhost:8080';\n\n    constructor(private http: HttpClient) { }\n\n    public getStudents(): Observable<Student[]> {\n        return this.http.get<Student[]>(`${this.apiServerUrl}/api/v1/student`);\n    }\n    \n    public addStudents(student: Student): Observable<Student> {\n            return this.http.post<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n            }\n\n\n    public updateStudent(student: Student): Observable<Student> {\n            return this.http.put<Student>(`${this.apiServerUrl}/api/v1/student`, student);\n    }\n    public deleteStudent(studentId: number): Observable<void> {\n        return this.http.delete<void>(`${this.apiServerUrl}/api/v1/student/${studentId}`);\n        }\n}\n    \n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,YAAY,GAAG,uBAAuB;EAEN;EAEjCC,WAAWA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,YAAY,iBAAiB,CAAC;EAC1E;EAEOG,WAAWA,CAACC,OAAgB;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,GAAG,IAAI,CAACL,YAAY,iBAAiB,EAAEI,OAAO,CAAC;EAC9E;EAGDE,aAAaA,CAACF,OAAgB;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,YAAY,iBAAiB,EAAEI,OAAO,CAAC;EACrF;EACOI,aAAaA,CAACC,SAAiB;IAClC,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,YAAY,mBAAmBS,SAAS,EAAE,CAAC;EACjF;;AAnBKZ,cAAc,C;mBAAdA,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdjB,cAAc,C;SAAdA,cAAc;EAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}