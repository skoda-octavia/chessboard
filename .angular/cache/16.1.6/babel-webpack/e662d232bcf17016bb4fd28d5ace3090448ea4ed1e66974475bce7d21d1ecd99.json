{"ast":null,"code":"import { Piece, PieceColor } from \"../../piece\";\nexport class Rook extends Piece {\n  possibleMoves(colorBoard) {\n    var possibleMoves = [];\n    var boardWidth = colorBoard[0].length;\n    var boardHeight = colorBoard.length;\n    console.log('colorBoard: ', colorBoard);\n    //right\n    for (let i = this.fieldWidth + 1; i < boardWidth; i++) {\n      var color = colorBoard[this.fieldHeight][i];\n      if (color == this.color) {\n        break;\n      } else if (color == PieceColor.None) {\n        possibleMoves.push([this.fieldHeight, i]);\n      } else {\n        possibleMoves.push([this.fieldHeight, i]);\n        break;\n      }\n    }\n    //left\n    for (let i = this.fieldWidth - 1; i >= 0; i--) {\n      var color = colorBoard[this.fieldHeight][i];\n      if (color == this.color) {\n        break;\n      } else if (color == PieceColor.None) {\n        possibleMoves.push([this.fieldHeight, i]);\n      } else {\n        possibleMoves.push([this.fieldHeight, i]);\n        break;\n      }\n    }\n    //up\n    console.log(\"field/board h/w\", this.fieldHeight, this.fieldWidth, boardHeight, boardWidth);\n    for (let i = this.fieldHeight - 1; i >= 0; i--) {\n      var color = colorBoard[i][this.fieldWidth];\n      console.log(\"color\", color);\n      if (color == this.color) {\n        break;\n      } else if (color == PieceColor.None) {\n        possibleMoves.push([i, this.fieldWidth]);\n      } else {\n        possibleMoves.push([i, this.fieldWidth]);\n        break;\n      }\n    }\n    //down\n    for (let i = this.fieldHeight + 1; i < boardHeight; i++) {\n      var color = colorBoard[this.fieldHeight][i];\n      if (color == this.color) {\n        break;\n      } else if (color == PieceColor.None) {\n        possibleMoves.push([this.fieldHeight, i]);\n      } else {\n        possibleMoves.push([this.fieldHeight, i]);\n        break;\n      }\n    }\n    return possibleMoves;\n  }\n  constructor(fieldHeight, fieldWidth) {\n    super(fieldHeight, fieldWidth);\n  }\n}","map":{"version":3,"names":["Piece","PieceColor","Rook","possibleMoves","colorBoard","boardWidth","length","boardHeight","console","log","i","fieldWidth","color","fieldHeight","None","push","constructor"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\src\\app\\chess\\pieces\\piece\\rook\\rook.ts"],"sourcesContent":["import { withDebugTracing } from \"@angular/router\";\nimport { Piece, PieceColor } from \"../../piece\";\n\n\nexport abstract class Rook extends Piece {\n    \n    possibleMoves(colorBoard: PieceColor[][]): number[][] {\n        var possibleMoves = []\n        var boardWidth = colorBoard[0].length;\n        var boardHeight = colorBoard.length;\n        console.log('colorBoard: ', colorBoard);\n        \n        //right\n        for (let i = this.fieldWidth + 1; i < boardWidth; i++) {\n            var color = colorBoard[this.fieldHeight][i];\n            if (color == this.color) { break }\n            else if (color == PieceColor.None) { possibleMoves.push([this.fieldHeight, i]) }\n            else {\n                possibleMoves.push([this.fieldHeight, i]);\n                break;\n            }\n        }\n        //left\n        for (let i = this.fieldWidth - 1; i >= 0; i--) {\n            var color = colorBoard[this.fieldHeight][i];\n            if (color == this.color) { break }\n            else if (color == PieceColor.None) { possibleMoves.push([this.fieldHeight, i]) }\n            else {\n                possibleMoves.push([this.fieldHeight, i]);\n                break;\n            }\n        }\n        //up\n        console.log(\"field/board h/w\", this.fieldHeight, this.fieldWidth, boardHeight, boardWidth)\n        for (let i = this.fieldHeight - 1; i >= 0; i--) {\n            var color = colorBoard[i][this.fieldWidth];\n            console.log(\"color\", color);\n            if (color == this.color) { break }\n            else if (color == PieceColor.None) { possibleMoves.push([i, this.fieldWidth]) }\n            else {\n                possibleMoves.push([i, this.fieldWidth]);\n                break;\n            }\n        }\n        //down\n        \n        for (let i = this.fieldHeight + 1; i < boardHeight; i++) {\n            var color = colorBoard[this.fieldHeight][i];\n            if (color == this.color) { break }\n            else if (color == PieceColor.None) { possibleMoves.push([this.fieldHeight, i]) }\n            else {\n                possibleMoves.push([this.fieldHeight, i]);\n                break;\n            }\n        }\n        \n        return possibleMoves;\n    }\n    \n    \n    constructor(fieldHeight: number, fieldWidth: number) {\n        super(fieldHeight, fieldWidth);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}