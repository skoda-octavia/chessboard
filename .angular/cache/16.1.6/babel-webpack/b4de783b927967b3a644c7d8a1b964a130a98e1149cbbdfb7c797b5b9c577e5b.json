{"ast":null,"code":"import { Field } from \"../field/field\";\nimport { BlackBishop } from \"../pieces/piece/blackBishop/black-bishop\";\nimport { BlackKing } from \"../pieces/piece/blackKing/black-king\";\nimport { BlackKnight } from \"../pieces/piece/blackKnight/black-knight\";\nimport { BlackPawn } from \"../pieces/piece/blackPawn/black-pawn\";\nimport { BlackQueen } from \"../pieces/piece/blackQueen/black-queen\";\nimport { BlackRook } from \"../pieces/piece/blackRook/black-rook\";\nimport { WhiteBishop } from \"../pieces/piece/whiteBishop/white-bishop\";\nimport { Whiteking } from \"../pieces/piece/whiteKing/whiteking\";\nimport { WhiteKnight } from \"../pieces/piece/whiteKnight/white-knight\";\nimport { WhitePawn } from \"../pieces/piece/whitePawn/white-pawn\";\nimport { WhiteQueen } from \"../pieces/piece/whiteQueen/white-queen\";\nimport { WhiteRook } from \"../pieces/piece/whiteRook/white-rook\";\nexport class Board {\n  buttonClicked(height, width) {}\n  setBaseBoard() {\n    this.height = 8;\n    this.width = 8;\n    var nextSquareWhite = true;\n    for (let i = 0; i < this.width; i++) {\n      this.fields.push([]);\n      for (let j = 0; j < this.height; j++) {\n        var field = new Field(nextSquareWhite, i, j);\n        field.board = this;\n        this.fields[i].push(field);\n        nextSquareWhite = !nextSquareWhite;\n      }\n      if (this.width % 2 === 0) {\n        nextSquareWhite = !nextSquareWhite;\n      }\n    }\n  }\n  setBasePosition() {\n    this.fields[0][0].setPiece(new BlackRook());\n    this.fields[0][1].setPiece(new BlackKnight());\n    this.fields[0][2].setPiece(new BlackBishop());\n    this.fields[0][3].setPiece(new BlackQueen());\n    this.fields[0][4].setPiece(new BlackKing());\n    this.fields[0][5].setPiece(new BlackBishop());\n    this.fields[0][6].setPiece(new BlackKnight());\n    this.fields[0][7].setPiece(new BlackRook());\n    for (let i = 0; i < this.width; i++) {\n      this.fields[1][i].setPiece(new BlackPawn());\n    }\n    for (let i = 0; i < this.width; i++) {\n      this.fields[6][i].setPiece(new WhitePawn());\n    }\n    this.fields[7][0].setPiece(new WhiteRook());\n    this.fields[7][1].setPiece(new WhiteKnight());\n    this.fields[7][2].setPiece(new WhiteBishop());\n    this.fields[7][3].setPiece(new WhiteQueen());\n    this.fields[7][4].setPiece(new Whiteking());\n    this.fields[7][5].setPiece(new WhiteBishop());\n    this.fields[7][6].setPiece(new WhiteKnight());\n    this.fields[7][7].setPiece(new WhiteRook());\n  }\n  constructor() {\n    this.fields = [];\n    this.width = 0;\n    this.height = 0;\n    this.anyButtonClicked = false;\n    this.setBaseBoard();\n    this.setBasePosition();\n  }\n}","map":{"version":3,"names":["Field","BlackBishop","BlackKing","BlackKnight","BlackPawn","BlackQueen","BlackRook","WhiteBishop","Whiteking","WhiteKnight","WhitePawn","WhiteQueen","WhiteRook","Board","buttonClicked","height","width","setBaseBoard","nextSquareWhite","i","fields","push","j","field","board","setBasePosition","setPiece","constructor","anyButtonClicked"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\src\\app\\chess\\board\\board.ts"],"sourcesContent":["import { Field } from \"../field/field\";\nimport { Piece } from \"../pieces/piece\";\nimport { BlackBishop } from \"../pieces/piece/blackBishop/black-bishop\";\nimport { BlackKing } from \"../pieces/piece/blackKing/black-king\";\nimport { BlackKnight } from \"../pieces/piece/blackKnight/black-knight\";\nimport { BlackPawn } from \"../pieces/piece/blackPawn/black-pawn\";\nimport { BlackQueen } from \"../pieces/piece/blackQueen/black-queen\";\nimport { BlackRook } from \"../pieces/piece/blackRook/black-rook\";\nimport { WhiteBishop } from \"../pieces/piece/whiteBishop/white-bishop\";\nimport { Whiteking } from \"../pieces/piece/whiteKing/whiteking\";\nimport { WhiteKnight } from \"../pieces/piece/whiteKnight/white-knight\";\nimport { WhitePawn } from \"../pieces/piece/whitePawn/white-pawn\";\nimport { WhiteQueen } from \"../pieces/piece/whiteQueen/white-queen\";\nimport { WhiteRook } from \"../pieces/piece/whiteRook/white-rook\";\n\nexport class Board {\n    fields: Field[][] = [];\n    width: number = 0;\n    height: number = 0;\n    anyButtonClicked: boolean = false;\n\n    buttonClicked(height: number, width: number) {\n        \n    }\n\n    setBaseBoard() {\n        this.height = 8;\n        this.width = 8;\n        var nextSquareWhite = true;\n        for (let i = 0; i < this.width; i++) {\n            this.fields.push([]);\n            for (let j = 0; j < this.height; j++) {\n                var field = new Field(nextSquareWhite, i, j);\n                field.board = this;\n                this.fields[i].push(field);\n                nextSquareWhite = !nextSquareWhite;\n            }\n            if (this.width % 2 === 0) {\n                nextSquareWhite = !nextSquareWhite;\n            }\n        }\n    }\n\n    setBasePosition() {\n        this.fields[0][0].setPiece(new BlackRook());\n        this.fields[0][1].setPiece(new BlackKnight());\n        this.fields[0][2].setPiece(new BlackBishop());\n        this.fields[0][3].setPiece(new BlackQueen());\n        this.fields[0][4].setPiece(new BlackKing());\n        this.fields[0][5].setPiece(new BlackBishop());\n        this.fields[0][6].setPiece(new BlackKnight());\n        this.fields[0][7].setPiece(new BlackRook());\n        for (let i = 0; i < this.width; i++) { this.fields[1][i].setPiece(new BlackPawn()); }\n\n        for (let i = 0; i < this.width; i++) { this.fields[6][i].setPiece(new WhitePawn()); }\n        \n        this.fields[7][0].setPiece(new WhiteRook());\n        this.fields[7][1].setPiece(new WhiteKnight());\n        this.fields[7][2].setPiece(new WhiteBishop());\n        this.fields[7][3].setPiece(new WhiteQueen());\n        this.fields[7][4].setPiece(new Whiteking());\n        this.fields[7][5].setPiece(new WhiteBishop());\n        this.fields[7][6].setPiece(new WhiteKnight());\n        this.fields[7][7].setPiece(new WhiteRook());\n        \n\n    }\n\n    constructor() {\n        this.setBaseBoard();\n        this.setBasePosition();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}