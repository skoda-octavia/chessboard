{"ast":null,"code":"export var PieceColor;\n(function (PieceColor) {\n  PieceColor[\"White\"] = \"white\";\n  PieceColor[\"Black\"] = \"black\";\n  PieceColor[\"None\"] = \"none\";\n})(PieceColor || (PieceColor = {}));\nexport class Piece {\n  correctField(boardHeight, boardWidth, row, column) {\n    if (!Number.isInteger(row) || row < 0 || row >= boardHeight) {\n      return false;\n    }\n    if (!Number.isInteger(column) || column < 0 || column >= boardWidth) {\n      return false;\n    }\n    return true;\n  }\n  moveTo(height, width) {\n    this.fieldHeight = height;\n    this.fieldWidth = width;\n  }\n  moveUnveiling(move) {\n    return true;\n  }\n  constructor(fieldHeight, fieldWidth, field) {\n    this.fieldHeight = fieldHeight;\n    this.fieldWidth = fieldWidth;\n    this.field = field;\n  }\n}","map":{"version":3,"names":["PieceColor","Piece","correctField","boardHeight","boardWidth","row","column","Number","isInteger","moveTo","height","width","fieldHeight","fieldWidth","moveUnveiling","move","constructor","field"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\chess\\pieces\\piece.ts"],"sourcesContent":["import { Field } from \"../field/field\";\n\nexport enum PieceColor {\n    White = \"white\",\n    Black = \"black\",\n    None = \"none\"\n}\n\n\n\nexport abstract class Piece {\n    abstract iconPath: string;\n    fieldHeight: number;\n    fieldWidth: number;\n    abstract color: PieceColor;\n    field: Field;\n\n    correctField(boardHeight: number, boardWidth: number, row: number, column: number) {\n        if (!Number.isInteger(row) || row < 0 || row >= boardHeight) {\n            return false;\n        }\n        if (!Number.isInteger(column) || column < 0 || column >= boardWidth) {\n            return false;\n        }\n        return true;\n    }\n\n    moveTo(height: number, width: number) {\n        this.fieldHeight = height;\n        this.fieldWidth = width;\n    }\n\n    moveUnveiling(move: number[][]): boolean {\n        return true;\n    }\n\n    abstract possibleMoves(colorBoard: PieceColor[][]): number[][];\n\n    constructor(fieldHeight: number, fieldWidth: number, field: Field) {\n        this.fieldHeight = fieldHeight;\n        this.fieldWidth = fieldWidth;\n        this.field = field\n    }\n}\n"],"mappings":"AAEA,WAAYA,UAIX;AAJD,WAAYA,UAAU;EAClBA,UAAA,mBAAe;EACfA,UAAA,mBAAe;EACfA,UAAA,iBAAa;AACjB,CAAC,EAJWA,UAAU,KAAVA,UAAU;AAQtB,OAAM,MAAgBC,KAAK;EAOvBC,YAAYA,CAACC,WAAmB,EAAEC,UAAkB,EAAEC,GAAW,EAAEC,MAAc;IAC7E,IAAI,CAACC,MAAM,CAACC,SAAS,CAACH,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,IAAIA,GAAG,IAAIF,WAAW,EAAE;MACzD,OAAO,KAAK;;IAEhB,IAAI,CAACI,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAIF,UAAU,EAAE;MACjE,OAAO,KAAK;;IAEhB,OAAO,IAAI;EACf;EAEAK,MAAMA,CAACC,MAAc,EAAEC,KAAa;IAChC,IAAI,CAACC,WAAW,GAAGF,MAAM;IACzB,IAAI,CAACG,UAAU,GAAGF,KAAK;EAC3B;EAEAG,aAAaA,CAACC,IAAgB;IAC1B,OAAO,IAAI;EACf;EAIAC,YAAYJ,WAAmB,EAAEC,UAAkB,EAAEI,KAAY;IAC7D,IAAI,CAACL,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACI,KAAK,GAAGA,KAAK;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}