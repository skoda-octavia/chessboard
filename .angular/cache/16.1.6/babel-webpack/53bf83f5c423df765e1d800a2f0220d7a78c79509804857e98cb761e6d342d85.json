{"ast":null,"code":"import { InfiniteRangePiece } from \"../infinite-range-piece\";\nexport class Bishop extends InfiniteRangePiece {\n  possibleMoves(colorBoard) {\n    return this.possibleInfiniteRangeMoves(colorBoard);\n  }\n  constructor(fieldHeight, fieldWidth, board) {\n    super(fieldHeight, fieldWidth, board);\n    this.directions = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n  }\n}","map":{"version":3,"names":["InfiniteRangePiece","Bishop","possibleMoves","colorBoard","possibleInfiniteRangeMoves","constructor","fieldHeight","fieldWidth","board","directions"],"sources":["C:\\Users\\UÅ¼ytkownik\\Desktop\\student fullstack\\studentManager\\chessboard\\src\\app\\chess\\pieces\\piece\\infiniteRangePiece\\bishop\\bishop.ts"],"sourcesContent":["import { Board } from \"src/app/chess/board/board\";\nimport { Field } from \"src/app/chess/field/field\";\nimport { Piece, PieceColor } from \"../../../piece\";\nimport { InfiniteRangePiece } from \"../infinite-range-piece\";\n\nexport abstract class Bishop extends InfiniteRangePiece {\n\n    directions: number[][] = [\n            [-1, -1],\n            [-1, 1],\n            [1, -1],\n            [1, 1]\n        ] \n    \n    possibleMoves(colorBoard: PieceColor[][]): number[][] {\n\n        return this.possibleInfiniteRangeMoves(colorBoard);\n\n    }\n\n    constructor(fieldHeight: number, fieldWidth: number, board: Board) {\n        super(fieldHeight, fieldWidth, board);\n    }\n\n}\n"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,yBAAyB;AAE5D,OAAM,MAAgBC,MAAO,SAAQD,kBAAkB;EASnDE,aAAaA,CAACC,UAA0B;IAEpC,OAAO,IAAI,CAACC,0BAA0B,CAACD,UAAU,CAAC;EAEtD;EAEAE,YAAYC,WAAmB,EAAEC,UAAkB,EAAEC,KAAY;IAC7D,KAAK,CAACF,WAAW,EAAEC,UAAU,EAAEC,KAAK,CAAC;IAdzC,KAAAC,UAAU,GAAe,CACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CACT;EAUL"},"metadata":{},"sourceType":"module","externalDependencies":[]}